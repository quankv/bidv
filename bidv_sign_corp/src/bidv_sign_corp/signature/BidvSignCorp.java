package bidv_sign_corp.signature;

import java.nio.charset.StandardCharsets;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;

public class BidvSignCorp {
	public static String hashFile(String originalString) {
		MessageDigest digest = null;
		try {
			digest = MessageDigest.getInstance("SHA-256");
		} catch (NoSuchAlgorithmException e) {
			e.printStackTrace();
		}
		byte[] hash = digest.digest( originalString.getBytes(StandardCharsets.UTF_8));
		StringBuilder hexString = new StringBuilder(2 * hash.length);
	    for (int i = 0; i < hash.length; i++) {
	        String hex = Integer.toHexString(0xff & hash[i]);
	        if(hex.length() == 1) {
	            hexString.append('0');
	        }
	        hexString.append(hex);
	    }
	    return hexString.toString();
	}
	public static void main(String args[]) {
		String base = "RGF0YQ0KDQpiYWEtYWNjZXNzLWluZm8NCg0KICAgIEJ1c2luZXNzIEF1dG9tYXRpb24gQXBwbGljYXRpb246DQogICAgICBodHRwczovL2NwZC1jcDRiYS1kZXYuYXBwcy5pYm1vY3AubGRhcHVkdGVzdC5jb20vYWUtd29ya3NwYWNlLw0KDQpiYXN0dWRpby1hY2Nlc3MtaW5mbw0KDQogICAgQ2xvdWRwYWsgRGFzaGJvYXJkOiBodHRwczovL2NwZC1jcDRiYS1kZXYuYXBwcy5pYm1vY3AubGRhcHVkdGVzdC5jb20NCg0KY21pcy1hY2Nlc3MtaW5mbw0KDQogICAgQ29udGVudCBNYW5hZ2VtZW50IEludGVyb3BlcmFiaWxpdHkgU2VydmljZXMgZm9yIENQNEJBOiBodHRwczovL2NwZC1jcDRiYS1kZXYuYXBwcy5pYm1vY3AubGRhcHVkdGVzdC5jb20vb3BlbmZuY21pc193bHANCiAgICAoTm90ZTogQWJvdmUgVVJMIGlzIG1lYW50IHRvIGJlIHVzZWQgd2hlbiBDUDRCQSBjYXBhYmlsaXRpZXMgYXJlIGluc3RhbGxlZCkNCiAgICBDb250ZW50IE1hbmFnZW1lbnQgSW50ZXJvcGVyYWJpbGl0eSBTZXJ2aWNlcyBmb3IgRk5DTTogaHR0cHM6Ly9jbWlzLWNwNGJhLWRldi5hcHBzLmlibW9jcC5sZGFwdWR0ZXN0LmNvbS9vcGVuZm5jbWlzX3dscA0KICAgIChOb3RlOiBBYm92ZSBVUkwgaXMgbWVhbnQgdG8gYmUgdXNlZCB3aGVuIEZOQ00gY2FwYWJpbGl0eSBpcyBpbnN0YWxsZWQpDQoNCmNwZS1hY2Nlc3MtaW5mbw0KDQogICAgQ29udGVudCBQbGF0Zm9ybSBFbmdpbmUgYWRtaW5pc3RyYXRpb246IGh0dHBzOi8vY3BkLWNwNGJhLWRldi5hcHBzLmlibW9jcC5sZGFwdWR0ZXN0LmNvbS9jcGUvYWNjZS8NCiAgICBDb250ZW50IFBsYXRmb3JtIEVuZ2luZSBoZWFsdGggY2hlY2s6IGh0dHBzOi8vY3BlLWNwNGJhLWRldi5hcHBzLmlibW9jcC5sZGFwdWR0ZXN0LmNvbS9QOENFL0hlYWx0aA0KICAgIENvbnRlbnQgUGxhdGZvcm0gRW5naW5lIHBpbmcgcGFnZTogaHR0cHM6Ly9jcGUtY3A0YmEtZGV2LmFwcHMuaWJtb2NwLmxkYXB1ZHRlc3QuY29tL0ZpbGVOZXQvRW5naW5lDQogICAgRmlsZU5ldCBQcm9jZXNzIFNlcnZpY2VzIHBpbmcgcGFnZTogaHR0cHM6Ly9jcGUtY3A0YmEtZGV2LmFwcHMuaWJtb2NwLmxkYXB1ZHRlc3QuY29tL3BlZW5naW5lL0lPUi9waW5nDQogICAgRmlsZU5ldCBQcm9jZXNzIFNlcnZpY2VzIGRldGFpbHMgcGFnZTogaHR0cHM6Ly9jcGUtY3A0YmEtZGV2LmFwcHMuaWJtb2NwLmxkYXB1ZHRlc3QuY29tL3BlZW5naW5lL0lPUi9hZG1pbi9oZWxwDQogICAgQ29udGVudCBTZWFyY2ggU2VydmljZXMgaGVhbHRoIGNoZWNrOiBodHRwczovL2NwZC1jcDRiYS1kZXYuYXBwcy5pYm1vY3AubGRhcHVkdGVzdC5jb20vY3BlL1A4Q0UvSGVhbHRoL0NCUkRhc2hib2FyZA0KDQpjcGUtc3RhdGVsZXNzLWFjY2Vzcy1pbmZvDQoNCiAgICBDb250ZW50IFBsYXRmb3JtIEVuZ2luZSBoZWFsdGggY2hlY2s6IGh0dHBzOi8vY3BlLXN0bGVzcy1jcDRiYS1kZXYuYXBwcy5pYm1vY3AubGRhcHVkdGVzdC5jb20vUDhDRS9IZWFsdGgNCiAgICBDb250ZW50IFBsYXRmb3JtIEVuZ2luZSBwaW5nIHBhZ2U6IGh0dHBzOi8vY3BlLXN0bGVzcy1jcDRiYS1kZXYuYXBwcy5pYm1vY3AubGRhcHVkdGVzdC5jb20vRmlsZU5ldC9FbmdpbmUNCiAgICBGaWxlTmV0IFByb2Nlc3MgU2VydmljZXMgcGluZyBwYWdlOiBodHRwczovL2NwZS1zdGxlc3MtY3A0YmEtZGV2LmFwcHMuaWJtb2NwLmxkYXB1ZHRlc3QuY29tL3BlZW5naW5lL0lPUi9waW5nDQogICAgRmlsZU5ldCBQcm9jZXNzIFNlcnZpY2VzIGRldGFpbHMgcGFnZTogaHR0cHM6Ly9jcGUtc3RsZXNzLWNwNGJhLWRldi5hcHBzLmlibW9jcC5sZGFwdWR0ZXN0LmNvbS9wZWVuZ2luZS9JT1IvYWRtaW4vaGVscA0KICAgIENvbnRlbnQgU2VhcmNoIFNlcnZpY2VzIGhlYWx0aCBjaGVjazogaHR0cHM6Ly9jcGUtc3RsZXNzLWNwNGJhLWRldi5hcHBzLmlibW9jcC5sZGFwdWR0ZXN0LmNvbS9QOENFL0hlYWx0aC9DQlJEYXNoYm9hcmQNCg0KZ3JhcGhxbC1hY2Nlc3MtaW5mbw0KDQogICAgQ29udGVudCBTZXJ2aWNlcyBHcmFwaFFMOiBodHRwczovL2NwZC1jcDRiYS1kZXYuYXBwcy5pYm1vY3AubGRhcHVkdGVzdC5jb20vY29udGVudC1zZXJ2aWNlcy1ncmFwaHFsLw0KDQpuYXZpZ2F0b3ItYWNjZXNzLWluZm8NCg0KICAgIEJ1c2luZXNzIEF1dG9tYXRpb24gTmF2aWdhdG9yIGZvciBDUDRCQTogaHR0cHM6Ly9jcGQtY3A0YmEtZGV2LmFwcHMuaWJtb2NwLmxkYXB1ZHRlc3QuY29tL2ljbi9uYXZpZ2F0b3IvDQogICAgKE5vdGU6IEFib3ZlIFVSTCBpcyBtZWFudCB0byBiZSB1c2VkIHdoZW4gQ1A0QkEgY2FwYWJpbGl0aWVzIHN1Y2ggYXMgQURQLCBCQUEsIEJBVywgZXRjIGFyZSBpbnN0YWxsZWQpDQogICAgQnVzaW5lc3MgQXV0b21hdGlvbiBOYXZpZ2F0b3IgZm9yIEZOQ006IGh0dHBzOi8vbmF2aWdhdG9yLWNwNGJhLWRldi5hcHBzLmlibW9jcC5sZGFwdWR0ZXN0LmNvbS9uYXZpZ2F0b3IvDQogICAgKE5vdGU6IEFib3ZlIFVSTCBpcyBtZWFudCB0byBiZSB1c2VkIHdoZW4gb25seSBGTkNNIGNhcGFiaWxpdHkgaXMgaW5zdGFsbGVkKQ0KDQpvZG0tYWNjZXNzLWluZm8NCg0KICAgIE9ETSBEZWNpc2lvbiBDZW50ZXIgVVJMOiBodHRwczovL2NwZC1jcDRiYS1kZXYuYXBwcy5pYm1vY3AubGRhcHVkdGVzdC5jb20vb2RtL2RlY2lzaW9uY2VudGVyDQogICAgT0RNIERlY2lzaW9uIFJ1bm5lciBVUkw6IGh0dHBzOi8vY3BkLWNwNGJhLWRldi5hcHBzLmlibW9jcC5sZGFwdWR0ZXN0LmNvbS9vZG0vRGVjaXNpb25SdW5uZXINCiAgICBPRE0gRGVjaXNpb24gU2VydmVyIENvbnNvbGUgVVJMOiBodHRwczovL2NwZC1jcDRiYS1kZXYuYXBwcy5pYm1vY3AubGRhcHVkdGVzdC5jb20vb2RtL3Jlcw0KICAgIE9ETSBEZWNpc2lvbiBTZXJ2ZXIgUnVudGltZSBVUkw6IGh0dHBzOi8vY3BkLWNwNGJhLWRldi5hcHBzLmlibW9jcC5sZGFwdWR0ZXN0LmNvbS9vZG0vRGVjaXNpb25TZXJ2aWNlDQoNCndvcmtmbG93LWF1dGhvcmluZy1hY2Nlc3MtaW5mbw0KDQogICAgVmlzaXQgZGVzaWduZXJzIGZyb20gQ2xvdWRwYWsgRGFzaGJvYXJkOiBodHRwczovL2NwZC1jcDRiYS1kZXYuYXBwcy5pYm1vY3AubGRhcHVkdGVzdC5jb20NCiAgICBCdXNpbmVzcyBBdXRvbWF0aW9uIFdvcmtmbG93IEF1dGhvcmluZyBQb3J0YWw6IGh0dHBzOi8vY3BkLWNwNGJhLWRldi5hcHBzLmlibW9jcC5sZGFwdWR0ZXN0LmNvbS9iYXdhdXQvUHJvY2Vzc1BvcnRhbA0KICAgIEJ1c2luZXNzIEF1dG9tYXRpb24gV29ya2Zsb3cgQXV0aG9yaW5nIEV4dGVybmFsIGJhc2UgVVJMOiBodHRwczovL2NwZC1jcDRiYS1kZXYuYXBwcy5pYm1vY3AubGRhcHVkdGVzdC5jb20vYmF3YXV0Lw0KICAgIEJ1c2luZXNzIEF1dG9tYXRpb24gQ2FzZSBDbGllbnQ6IGh0dHBzOi8vY3BkLWNwNGJhLWRldi5hcHBzLmlibW9jcC5sZGFwdWR0ZXN0LmNvbS9pY24vbmF2aWdhdG9yLz9kZXNrdG9wPWJhdw0KICAgIElCTSBXb3JrcGxhY2U6IGh0dHBzOi8vY3BkLWNwNGJhLWRldi5hcHBzLmlibW9jcC5sZGFwdWR0ZXN0LmNvbS9pY24vbmF2aWdhdG9yLz9kZXNrdG9wPXdvcmtwbGFjZQ0KICAgIFByb2Nlc3MgRmVkZXJhdGVkIFNlcnZlciBmZWRlcmF0ZWQgd29ya2Zsb3cgc2VydmVyczogaHR0cHM6Ly9jcGQtY3A0YmEtZGV2LmFwcHMuaWJtb2NwLmxkYXB1ZHRlc3QuY29tL3Bmcy9yZXN0L2JwbS9mZWRlcmF0ZWQvdjEvc3lzdGVtcw0KDQoNCg0KDQpDbG91ZCBQYWsgRGFzaGJvYXJkOiBodHRwczovL2NwZC1jcDRiYS1kZXYuYXBwcy5pYm1vY3AubGRhcHVkdGVzdC5jb20gKGJhbyBn4buTbSBCdXNpbmVzcyBhcHBsaWNhdGlvbnMgdsOgIEJ1c2luZXNzIGF1dG9tYXRpb25zKQ0KDQpjcDRiYWRtaW4vMTIzNDU2YUAgKFTDoGkga2hv4bqjbiBhZG1pbiDEkcOjIGPhuqV1IGjDrG5oIHRyb25nIExEQVAgY+G7p2EgYuG7mSBDbG91ZCBQYWspDQoNClByb2Nlc3MgUG9ydGFsOiBodHRwczovL2NwZC1jcDRiYS1kZXYuYXBwcy5pYm1vY3AubGRhcHVkdGVzdC5jb20vYmF3YXV0L1Byb2Nlc3NQb3J0YWwNCg0KY3A0YmFkbWluLzEyMzQ1NmFAIChUw6BpIGtob+G6o24gYWRtaW4gxJHDoyBj4bqldSBow6xuaCB0cm9uZyBMREFQIGPhu6dhIGLhu5kgQ2xvdWQgUGFrKQ0KDQpXb3JrcGxhY2U6IGh0dHBzOi8vY3BkLWNwNGJhLWRldi5hcHBzLmlibW9jcC5sZGFwdWR0ZXN0LmNvbS9pY24vbmF2aWdhdG9yLz9kZXNrdG9wPXdvcmtwbGFjZQ0KDQpjcDRiYWRtaW4vMTIzNDU2YUAgKFTDoGkga2hv4bqjbiBhZG1pbiDEkcOjIGPhuqV1IGjDrG5oIHRyb25nIExEQVAgY+G7p2EgYuG7mSBDbG91ZCBQYWspDQoNCg0KaHR0cHM6Ly9jb25zb2xlLW9wZW5zaGlmdC1jb25zb2xlLmFwcHMuaWJtb2NwLmxkYXB1ZHRlc3QuY29tDQoNCg0KaHB0YWRtaW4NCnNlYXRlY2hhZG1pbg0KDQoxMjM0NTZhQA0KDQogDQoxMC41My4xMjEuMjExIG9hdXRoLW9wZW5zaGlmdC5hcHBzLmlibW9jcC5sZGFwdWR0ZXN0LmNvbQ0KMTAuNTMuMTIxLjIxMSBjb25zb2xlLW9wZW5zaGlmdC1jb25zb2xlLmFwcHMuaWJtb2NwLmxkYXB1ZHRlc3QuY29tDQoxMC41My4xMjEuMjExIGtpYmFuYS1vcGVuc2hpZnQtbG9nZ2luZy5hcHBzLmlibW9jcC5sZGFwdWR0ZXN0LmNvbQ0KMTAuNTMuMTIxLjIxMSBjcGQtY3A0YmEtZGV2LmFwcHMuaWJtb2NwLmxkYXB1ZHRlc3QuY29tDQoxMC41My4xMjEuMjExIGNwLWNvbnNvbGUuYXBwcy5pYm1vY3AubGRhcHVkdGVzdC5jb20NCjEwLjUzLjEyMS4yMTEgY3BlLWNwNGJhLWRldi5hcHBzLmlibW9jcC5sZGFwdWR0ZXN0LmNvbQ0KMTAuNTMuMTIxLjIxMCBhcGkuaWJtb2NwLmxkYXB1ZHRlc3QuY29tDQoxMC41My4xMjEuMjExIHByb21ldGhldXMtazhzLW9wZW5zaGlmdC1tb25pdG9yaW5nLmFwcHMuaWJtb2NwLmxkYXB1ZHRlc3QuY29tDQoNCg0KMTAuNTMuMTIxLjIxMTtvYXV0aC1vcGVuc2hpZnQuYXBwcy5pYm1vY3AubGRhcHVkdGVzdC5jb207MTAuNTMuMTIxLjIxMTtjb25zb2xlLW9wZW5zaGlmdC1jb25zb2xlLmFwcHMuaWJtb2NwLmxkYXB1ZHRlc3QuY29tOzEwLjUzLjEyMS4yMTE7a2liYW5hLW9wZW5zaGlmdC1sb2dnaW5nLmFwcHMuaWJtb2NwLmxkYXB1ZHRlc3QuY29tOzEwLjUzLjEyMS4yMTE7Y3BkLWNwNGJhLWRldi5hcHBzLmlibW9jcC5sZGFwdWR0ZXN0LmNvbTsxMC41My4xMjEuMjExO2NwLWNvbnNvbGUuYXBwcy5pYm1vY3AubGRhcHVkdGVzdC5jb207MTAuNTMuMTIxLjIxMTtjcGUtY3A0YmEtZGV2LmFwcHMuaWJtb2NwLmxkYXB1ZHRlc3QuY29tOzEwLjUzLjEyMS4yMTA7YXBpLmlibW9jcC5sZGFwdWR0ZXN0LmNvbQ0KDQprOXMNCm9jIGxvZ2luIC0tdG9rZW49c2hhMjU2fno5anRGaXFRSDBJWXpuY2lGeXdCY0NKVDFyV3p0eXVLY0xtRllON0xMWnMgLS1zZXJ2ZXI9aHR0cHM6Ly9hcGkuaWJtb2NwLmxkYXB1ZHRlc3QuY29tOjY0NDMNCjpjb25maWdtYXANCi9hY2Nlc3MNCg0KREI6DQoxMC41My4xMjEuMTk4DQpzZXJ2aWNlOmJwbXVhdA0KcG9ydDoxNTIxDQpERVZfQUNDT1VOVElORy9Qc3N3MHJkQWNjb3VudGluZzIwMjINCkRFVl9ESVNCVVJTTUVOVC9Qc3N3MHJkRGlzYnVyc21lbnQyMDIyDQoNCg0KY2xvdWQgcGFrIHN1cGVyIGFkbWluDQpzZWNyZXQ+PmZpbmQgImF1dGgtaWRwIg0KYWRtaW4vcndxbFR0Z2VuSXRpT0Q1S3J6SDN5cHlJeVg0aHByT3QNCg0KDQpqbXMgZml4Og0KU3RhdGVmdWxTZXRzID4gaWNwNGFkZXBsb3ktd29ya2Zsb3ctYXV0aG9yaW5nLWJhdy1qbXMNCnN0YXJ0dXBQcm9iZToNCiAgICAgICAgICAgIGh0dHBHZXQ6DQogICAgICAgICAgICAgIHBhdGg6IC9qbXNoZWFsdGgvY2hlY2sNCiAgICAgICAgICAgICAgcG9ydDogOTQ0Mw0KICAgICAgICAgICAgICBzY2hlbWU6IEhUVFBTDQogICAgICAgICAgICB0aW1lb3V0U2Vjb25kczogMTANCiAgICAgICAgICAgIHBlcmlvZFNlY29uZHM6IDEwDQogICAgICAgICAgICBzdWNjZXNzVGhyZXNob2xkOiAxDQogICAgICAgICAgICBmYWlsdXJlVGhyZXNob2xkOiAyMA0K";
		System.out.println(hashFile(base));
	}
}
